generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  id           Int           @id @default(autoincrement())
  name         String
  email        String        @unique
  phone        String        @unique
  coupons      Coupon[]
  transactions Transaction[]
  otp          String?
  otpExpires   DateTime?
  isVerified   Boolean       @default(false)
}

model Store {
  id             Int           @id @default(autoincrement())
  name           String
  address        String
  logo           String
  ownerName      String
  ownerDob       DateTime
  ownerGender    String
  ownerPhone     String        @unique
  ownerAadhaar   String        @unique
  email          String        @unique
  ownerPhoto     String
  ownerUpi       String
  otp            String?
  otpExpires     DateTime?
  reviews        Json[]
  staff          Staff[]       @relation("StoreToStaff") // Relation name is provided here
  transactions   Transaction[]
  coupons        Coupon[]
  isVerified     Boolean       @default(false)
  storeId        Int           @unique
}

model Staff {
  id           Int           @id @default(autoincrement())
  storeId      Int
  store        Store         @relation("StoreToStaff", fields: [storeId], references: [storeId], onDelete: Cascade) // Bidirectional relation
  name         String
  email        String        @unique
  aadhaar      String        @unique
  upi          String
  dob          DateTime
  gender       String
  number       String        @unique
  reviews      Json[]
  avgRating    Float         @default(0)
  transactions Transaction[]
  isVerified   Boolean       @default(false)
  otp          String?
  otpExpires   DateTime?
}




model PlatformReview {
  id      Int    @id @default(autoincrement())
  name    String
  title   String
  text    String
  rating  Int
}

model Transaction {
  id        Int      @id @default(autoincrement())
  time      DateTime @default(now())
  customerId Int
  storeId   Int
  staffId   Int
  bill      Float
  tip       Float
  total     Float
  customer  Customer @relation(fields: [customerId], references: [id])
  store     Store    @relation(fields: [storeId], references: [id])
  staff     Staff    @relation(fields: [staffId], references: [id])
  upiTransactionId String?
}

model Coupon {
  id         Int      @id @default(autoincrement())
  customerId Int
  storeId    Int
  storeName  String
  discount   Float
  validity   DateTime
  code       String   @unique
  customer   Customer @relation(fields: [customerId], references: [id])
  store      Store    @relation(fields: [storeId], references: [id])
}